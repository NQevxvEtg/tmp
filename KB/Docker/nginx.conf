events {
    worker_connections  4096;  ## Default: 1024
}
pid /run/nginx.pid;

http {
    server {
        listen                      443 ssl;  # Enable HTTPS
        server_name                 localhost;
        root                        /usr/share/nginx/html;
        client_max_body_size        100M;

        ssl_certificate             /etc/nginx/cert.pem;  # Path to NGINX certificate
        ssl_certificate_key         /etc/nginx/privkey.pem;  # Path to NGINX private key
        ssl_prefer_server_ciphers   on;

        error_log                   /var/log/nginx/error.log debug;

        location / {
            autoindex on;
            ssi on;
        }

        location /stigman/ {
            proxy_pass              http://api:54000/;  # Proxy to API over HTTP
            proxy_set_header        Host               $host;
            proxy_set_header        X-Real-IP          $remote_addr;
            proxy_set_header        X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto  $scheme;

            # Add CORS headers
            add_header              Access-Control-Allow-Origin *;
            add_header              Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header              Access-Control-Allow-Headers "Authorization, Content-Type";

            # Handle preflight requests
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                return 204;
            }
        }

        location /kc/ {
            proxy_pass              https://auth:8443/;  # Proxy to Keycloak over HTTPS
            proxy_set_header        Host               $host;
            proxy_set_header        X-Real-IP          $remote_addr;
            proxy_set_header        X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Host   $host;
            proxy_set_header        X-Forwarded-Server $host;
            proxy_set_header        X-Forwarded-Port   $server_port;
            proxy_set_header        X-Forwarded-Proto  $scheme;
            proxy_buffer_size       128k;
            proxy_buffers           4 256k;
            proxy_busy_buffers_size 256k;

            # Add CORS headers
            add_header              Access-Control-Allow-Origin *;
            add_header              Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header              Access-Control-Allow-Headers "Authorization, Content-Type";

            # Handle preflight requests
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                return 204;
            }
        }
    }

    map_hash_bucket_size 128;
    map $uri $secured_url {
        default false;
        "/kc/realms/stigman/protocol/openid-connect/auth" true;
    }

    map "$secured_url:$ssl_client_verify" $return_unauthorized {
            default 0;
            "true:FAILED" 1;
            "true:NONE" 1;
            "true:" 1;
    }
}
